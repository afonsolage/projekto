name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  # If nightly is breaking CI, modify this variable to target a specific nightly version.
  NIGHTLY_TOOLCHAIN: nightly-2025-08-05

jobs:

  # Run cargo test --workspace
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.toml') }}
      - name: Install mold
        uses: rui314/setup-mold@v1
      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: ${{ env.NIGHTLY_TOOLCHAIN }}
      - name: Install Linux dependencies
        uses: ./.github/actions/install-linux-deps
      - name: Run cargo test
        run: cargo +${{ env.NIGHTLY_TOOLCHAIN }} test --workspace

  # Run cargo clippy -- -D warnings
  clippy_check:
    name: Clippy
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.toml') }}
      - name: Install mold
        uses: rui314/setup-mold@v1
      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: ${{ env.NIGHTLY_TOOLCHAIN }}
          components: clippy
      - name: Install Linux dependencies
        uses: ./.github/actions/install-linux-deps
      - name: Run clippy
        run: cargo +${{ env.NIGHTLY_TOOLCHAIN }} clippy -- -D warnings

  # Run cargo fmt --all -- --check
  format:
    name: Format
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: ${{ env.NIGHTLY_TOOLCHAIN }}
          components: rustfmt
      - name: Run cargo fmt
        run: cargo +${{ env.NIGHTLY_TOOLCHAIN }} fmt --all -- --check

  check-unused-dependencies:
    name: Unused Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_TOOLCHAIN }}
      - uses: actions/cache/restore@v4
        with:
          # key won't match, will rely on restore-keys
          key: ${{ runner.os }}-${{ env.NIGHTLY_TOOLCHAIN }}--${{ hashFiles('**/Cargo.toml') }}-
          # See .github/workflows/validation-jobs.yml for how keys are generated
          restore-keys: |
            ${{ runner.os }}-${{ env.NIGHTLY_TOOLCHAIN }}--${{ hashFiles('**/Cargo.toml') }}-
            ${{ runner.os }}-${{ env.NIGHTLY_TOOLCHAIN }}--
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
      - name: Install mold
        uses: rui314/setup-mold@v1
      - name: Installs cargo-udeps
        run: cargo +${{ env.NIGHTLY_TOOLCHAIN }} install --force cargo-udeps
      - name: Install Linux dependencies
        uses: ./.github/actions/install-linux-deps
      - name: Run cargo udeps
        run: cargo +${{ env.NIGHTLY_TOOLCHAIN }} udeps
